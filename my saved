using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Configuration;
using static System.Windows.Forms.VisualStyles.VisualStyleElement;
using System.Reflection.Emit;
using static System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar;
using System.IO;
using System.Data.OleDb;


namespace insertform
{
    public partial class Form1 : Form
    {
        SqlConnection con = new SqlConnection("Data Source=10.168.16.78\\MSSQLSRV2019;Initial Catalog=SQLTraining;User ID=AWLDhrishti;Password=AWLDhrishti;Encrypt=False");
        SqlCommand cmd;
        SqlDataAdapter adapt;
        private Size formOriginalSize;
        private Rectangle Name_layout;
        private Rectangle Name_lbl;
        private Rectangle Street_layout;
        private Rectangle Street_lbl;
        private Rectangle City_layout;
        private Rectangle City_lbl;
        private Rectangle State_layout;
        private Rectangle State_lbl;
        private Rectangle ZIP_layout;
        private Rectangle ZIP_lbl;
        private Rectangle Clear_layout;
        private Rectangle Save_layout;
        private Rectangle Drop_layout;
        private Rectangle Pattern_layout;
        private Rectangle Pattern_lbl;
        private Rectangle Filter_lbl;
        private Rectangle Remove_layout;
        private Rectangle Update_layout;
        private Rectangle Refresh_layout;
        private Rectangle Download_layout;
        private Rectangle Datagrid_layout;

        public Form1()
        {
            InitializeComponent();
            this.Resize += Form1_Resiz;
            formOriginalSize = this.Size;
            Display();

            Name_layout = new Rectangle(Name_box.Location, Name_box.Size);
            Name_lbl = new Rectangle(Name_lable.Location, Name_lable.Size);
            Street_layout = new Rectangle(Street_box.Location, Street_box.Size);
            Street_lbl = new Rectangle(Street_lable.Location, Street_lable.Size);
            City_layout = new Rectangle(City_box.Location, City_box.Size);
            City_lbl = new Rectangle(City_lable.Location, City_lable.Size);
            State_layout = new Rectangle(State_box.Location, State_box.Size);
            State_lbl = new Rectangle(State_lable.Location, State_lable.Size);
            ZIP_layout = new Rectangle(ZIP_box.Location, ZIP_box.Size);
            ZIP_lbl = new Rectangle(ZIP_lable.Location, ZIP_lable.Size);
            Clear_layout = new Rectangle(Clear_button.Location, Clear_button.Size);
            Save_layout = new Rectangle(Save_button.Location, Save_button.Size);
            Drop_layout = new Rectangle(comboBox1.Location, comboBox1.Size);
            Pattern_layout = new Rectangle(Pattern_box.Location, Pattern_box.Size);
            Pattern_lbl = new Rectangle(Pattern_label.Location, Pattern_label.Size);
            Filter_lbl = new Rectangle(Filter_lable.Location, Filter_lable.Size);

            Remove_layout = new Rectangle(Remove_btn.Location, Remove_btn.Size);
            Update_layout = new Rectangle(Update_btn.Location, Update_btn.Size);
            Refresh_layout = new Rectangle(Refresh_btn.Location, Refresh_btn.Size);
            Download_layout = new Rectangle(Download_btn.Location, Download_btn.Size);
            Datagrid_layout = new Rectangle(dataGridView1.Location, dataGridView1.Size);

        }
        private void Form1_Resiz(object sender, EventArgs e)
        {
            resize_Control(Name_box, Name_layout);
            resize_Control(Name_lable, Name_lbl);

            resize_Control(Street_box, Street_layout);
            resize_Control(Street_lable, Street_lbl);

            resize_Control(City_box, City_layout);
            resize_Control(City_lable, City_lbl);

            resize_Control(State_box, State_layout);
            resize_Control(State_lable, State_lbl);

            resize_Control(ZIP_box, ZIP_layout);
            resize_Control(ZIP_lable, ZIP_lbl);

            resize_Control(Clear_button, Clear_layout);
            resize_Control(Save_button, Save_layout);

            resize_Control(comboBox1, Drop_layout);

            resize_Control(Pattern_box, Pattern_layout);
            resize_Control(Pattern_label, Pattern_lbl);
            resize_Control(Filter_lable, Filter_lbl);


            resize_Control(Remove_btn, Remove_layout);
            resize_Control(Update_btn, Update_layout);
            resize_Control(Refresh_btn, Refresh_layout);
            resize_Control(Download_btn, Download_layout);

            resize_Control(dataGridView1, Datagrid_layout);


        }
        private void resize_Control(Control c, Rectangle r)
        {
            float xRatio = (float)(this.Width) / (float)(formOriginalSize.Width);
            float yRatio = (float)(this.Height) / (float)(formOriginalSize.Height);
            int newX = (int)(r.X * xRatio);
            int newY = (int)(r.Y * yRatio);

            int newWidth = (int)(r.Width * xRatio);
            int newHeight = (int)(r.Height * yRatio);

            c.Location = new Point(newX, newY);
            c.Size = new Size(newWidth, newHeight);

        }
        public void Display()
        {
            SqlCommand showq = new SqlCommand("Select * from karan1", con);
            SqlDataAdapter data = new SqlDataAdapter(showq);
            DataTable dt = new DataTable();
            data.Fill(dt);
            dataGridView1.DataSource = dt;
        }
        private void Name_box_TextChanged(object sender, EventArgs e)
        {

        }

        private void Street_box_TextChanged(object sender, EventArgs e)
        {

        }

        private void City_box_TextChanged(object sender, EventArgs e)
        {

        }

        private void State_box_TextChanged(object sender, EventArgs e)
        {

        }

        private void ZIP_box_TextChanged(object sender, EventArgs e)
        {
            if (Convert.ToString(ZIP_box.Text).Length > 6)
            {   
                ZIP_box.Clear();
                MessageBox.Show("Enter 6 digits in Zip_box");
            }
        }

        private void Save_button_Click(object sender, EventArgs e)
        {


            try
            {
                con.Open();

                cmd = new SqlCommand("Insert into karan1 values (@NAME ,@STREET,@CITY,@STATE,@ZIP)", con);

                cmd.Parameters.AddWithValue("@NAME", Name_box.Text);
                cmd.Parameters.AddWithValue("STREET", Street_box.Text);
                cmd.Parameters.AddWithValue("@CITY", City_box.Text);
                cmd.Parameters.AddWithValue("@STATE", State_box.Text);
                cmd.Parameters.AddWithValue("@ZIP", int.Parse(ZIP_box.Text));

                if (string.IsNullOrWhiteSpace(Name_box.Text) || string.IsNullOrWhiteSpace(Street_box.Text) || string.IsNullOrWhiteSpace(City_box.Text) || string.IsNullOrWhiteSpace(State_box.Text) || string.IsNullOrWhiteSpace(ZIP_box.Text))
                {
                    MessageBox.Show("Please enter all the details");
                }
                else
                {
                    MessageBox.Show("Data is successfully saved");
                    cmd.ExecuteNonQuery();
                    Display();
                    
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"An error occurred: {ex.Message}");
            }
            finally
            {
                if (con.State == ConnectionState.Open)
                {
                    con.Close();
                }
            }
            
        }
       
       
        private void Name_lable_Click(object sender, EventArgs e)
        {

        }

        private void City_lable_Click(object sender, EventArgs e)
        {

        }

        private void Street_lable_Click(object sender, EventArgs e)
        {

        }

        private void State_lable_Click(object sender, EventArgs e)
        {

        }

        private void ZIP_lable_Click(object sender, EventArgs e)
        {

        }

        private void ID_box_TextChanged(object sender, EventArgs e)
        {

        }

        private void Clear_button_Click(object sender, EventArgs e)
        {
            Name_box.Clear();
            Street_box.Clear();
            City_box.Clear();
            State_box.Clear();
            ZIP_box.Clear();
        }

        private void Remove_btn_Click(object sender, EventArgs e)
        {
            
            con.Open();
            int id = Convert.ToInt32(dataGridView1.SelectedRows[0].Cells["ID"].Value);
               
            cmd = new SqlCommand($"DELETE FROM karan1 WHERE ID = {id}", con);
                

                //cmd.Parameters.AddWithValue("@id", id);
            cmd.ExecuteNonQuery();
               
            cmd = new SqlCommand("Select * from karan1", con);
            cmd.ExecuteNonQuery();

            
            SqlCommand showq = new SqlCommand("Select * from karan1", con);
            SqlDataAdapter data = new SqlDataAdapter(showq);
            DataTable dt = new DataTable();
            data.Fill(dt);
            dataGridView1.DataSource = dt;
            
            con.Close();
            MessageBox.Show("Record Deleted Successfully!");


        }

        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {

            int id = Convert.ToInt32(dataGridView1.SelectedRows[0].Cells["ID"].Value);
            con.Open();
            SqlCommand cmd = new SqlCommand($"select*from karan1 where ID = {id}", con);
            cmd.ExecuteNonQuery();
            SqlDataReader reader = cmd.ExecuteReader();
            if (reader.HasRows)
            {
                while (reader.Read())
                {
                    string n = reader.GetString(1);
                    Name_box.Text = n;
                }

            }
            else
            {
                MessageBox.Show("No rows found.");

            }
            con.Close();
        }

        private void Pattern_label_Click(object sender, EventArgs e)
        {

        }

        private void Pattern_box_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                try
                {
                    con.Open();
                    cmd = new SqlCommand($"SELECT * FROM karan1 WHERE {comboBox1.SelectedItem} LIKE @Pattern", con);
                    cmd.Parameters.AddWithValue("@Pattern", $"%{Pattern_box.Text}%");

                    SqlDataAdapter data = new SqlDataAdapter(cmd);
                    DataTable dt = new DataTable();
                    data.Fill(dt);
                    dataGridView1.DataSource = dt;
                }
                catch (Exception ex)
                {
                    MessageBox.Show($"An error occurred: {ex.Message}");
                }
                finally
                {
                    con.Close();
                }

            }

        }

        private void Refresh_btn_Click(object sender, EventArgs e)
        {
            con.Open();
            Display();
            con.Close();
        }

        private void Download_btn_Click(object sender, EventArgs e)
        {
            dataGridView1.SelectAll();
            DataObject copydata = dataGridView1.GetClipboardContent();
            if (copydata != null) Clipboard.SetDataObject(copydata);
            Microsoft.Office.Interop.Excel.Application xlapp = new Microsoft.Office.Interop.Excel.Application();
            xlapp.Visible = true;
            Microsoft.Office.Interop.Excel.Workbook xlWbook;
            Microsoft.Office.Interop.Excel.Worksheet xlsheet;
            object miseddata = System.Reflection.Missing.Value;
            xlWbook = xlapp.Workbooks.Add(miseddata);

            xlsheet = (Microsoft.Office.Interop.Excel.Worksheet)xlWbook.Worksheets.get_Item(1);
            Microsoft.Office.Interop.Excel.Range xlr = (Microsoft.Office.Interop.Excel.Range)xlsheet.Cells[1,1];
            xlr.Select();

            xlsheet.PasteSpecial(xlr, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, true);
        }
      
        private void Update_btn_Click(object sender, EventArgs e)
        {
           
            con.Open();
            int id = Convert.ToInt32(dataGridView1.SelectedRows[0].Cells["ID"].Value);
            if (id > 0)
            {
                try
                {
                   // SqlDataReader reader = cmd.ExecuteReader();

                   SqlCommand cmd = new SqlCommand($"update karan1 set NAME='{Name_box.Text}',STREET='{Street_box.Text}',CITY='{City_box.Text}',STATE='{State_box.Text}',ZIP='{Convert.ToInt32(ZIP_box.Text)}' where ID={id}  ", con);

                    
                   
                        cmd.ExecuteNonQuery();
                        Display();
                        MessageBox.Show("Data is successfully saved");
                    
                }
                catch (Exception ex)
                {
                    MessageBox.Show($"An error occurred: {ex.Message}");
                }
                finally
                {
                    if (con.State == ConnectionState.Open)
                    {
                        con.Close();
                    }
                }
            }

            con.Close();

        }

        private void dataGridView1_CellClick(object sender, DataGridViewCellEventArgs e)
        {

            int id = Convert.ToInt32(dataGridView1.SelectedRows[0].Cells["ID"].Value);
            con.Open();
            SqlCommand cmd = new SqlCommand($"select*from karan1 where ID = {id}", con);
            cmd.ExecuteNonQuery();
            SqlDataReader reader = cmd.ExecuteReader();
            if (reader.HasRows)
            {
                while (reader.Read())
                {
                    //string n = reader.GetString(1);
                    Name_box.Text = reader.GetString(1);
                    Street_box.Text = reader.GetString(2);
                    City_box.Text = reader.GetString(3);
                    State_box.Text = reader.GetString(4);
                    ZIP_box.Text = reader.GetString(5);

                }

            }
            else
            {
                MessageBox.Show("No rows found.");

            }
            con.Close();
            //reader.Close();
        }

        private void Name_box_KeyPress(object sender, KeyPressEventArgs e)
        {
            if(!char.IsLetter(e.KeyChar) && !char.IsControl(e.KeyChar) && !char.IsWhiteSpace(e.KeyChar))
            {
                e.Handled = true;
            }
        }

        private void City_box_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsLetter(e.KeyChar) && !char.IsControl(e.KeyChar) && !char.IsWhiteSpace(e.KeyChar))
            {
                e.Handled = true;
            }
        }

        private void State_box_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsLetter(e.KeyChar) && !char.IsControl(e.KeyChar) && !char.IsWhiteSpace(e.KeyChar))
            {
                e.Handled = true;
            }
        }

        private void ZIP_box_KeyPress(object sender, KeyPressEventArgs e)
        {
           
            if (!char.IsNumber(e.KeyChar) && !char.IsControl(e.KeyChar) && !char.IsWhiteSpace(e.KeyChar))
            {
                e.Handled = true;
               
                 
            }
         
        }

        private void Upload_btn_Click(object sender, EventArgs e)
        {
            con.Open();
            try
            {
                string filePath = Browse_box.Text;

                // Check if a file is selected
                if (string.IsNullOrEmpty(filePath))
                {
                    MessageBox.Show("Please select a file to upload.");
                    return;
                }

                // Connection string for Excel
                string excelConnectionString = $"Provider=Microsoft.ACE.OLEDB.12.0;Data Source={filePath}; Extended Properties='Excel 12.0; HDR = YES'";

                using (OleDbConnection excelConnection = new OleDbConnection(excelConnectionString))
                {
                    excelConnection.Open();

                    // Get the first sheet name
                    DataTable dtExcelSchema = excelConnection.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);
                    string sheetName = dtExcelSchema.Rows[0]["TABLE_NAME"].ToString();

                    // Read data from Excel
                    string query = $"SELECT * FROM [{sheetName}]";
                    using (OleDbDataAdapter dataAdapter = new OleDbDataAdapter(query, excelConnection))
                    {
                        DataTable dt = new DataTable();
                        dataAdapter.Fill(dt);

                        // Import data into SQL Server table
                        using (SqlBulkCopy bulkCopy = new SqlBulkCopy(con))
                        {
                            bulkCopy.DestinationTableName = "karan1";
                            foreach (DataColumn col in dt.Columns)
                            {
                                bulkCopy.ColumnMappings.Add(col.ColumnName, col.ColumnName);
                            }
                            bulkCopy.WriteToServer(dt);

                            MessageBox.Show("Data imported successfully!");
                            Display(); // Refresh the grid after importing data
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"An error occurred: {ex.Message}");
            }

        }



        private void openFileDialog1_FileOk(object sender, CancelEventArgs e)
        {
        }

        private void Final_btn_Click(object sender, EventArgs e)
        {

        }

        private void Browse_btn_Click(object sender, EventArgs e)
        {

            
            
            openFileDialog1.InitialDirectory = "C://Desktop";
            //Your opendialog box title name.
            openFileDialog1.Title = "Select file to be upload.";
            //which type file format you want to upload in database. just add them.
            openFileDialog1.Filter = "Select Valid Document(*.pdf; *.doc; *.xlsx; *.html)|*.pdf; *.docx; *.xlsx; *.html";
            //FilterIndex property represents the index of the filter currently selected in the file dialog box.
            openFileDialog1.FilterIndex = 1;
            try
            {
                if (openFileDialog1.ShowDialog() == System.Windows.Forms.DialogResult.OK)
                {
                    if (openFileDialog1.CheckFileExists)
                    {
                        string path = System.IO.Path.GetFullPath(openFileDialog1.FileName);
                        Browse_box.Text = path;
                    }
                }
                else
                {
                    MessageBox.Show("Please Upload document.");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            
        }

        private void Browse_box_TextChanged(object sender, EventArgs e)
        {

        }
    }
    }

